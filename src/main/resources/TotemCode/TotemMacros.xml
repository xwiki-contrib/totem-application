<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>TotemCode</web>
  <name>TotemMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>TotemCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1424357402000</creationDate>
  <date>1426773606000</date>
  <contentUpdateDate>1426773600000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro(displayTotemBlock $totemBlock $withEdit $cancelURL $editURL $totemItemClass $sheetFieldsMapping $totemItemsURL)
  #set( $isBlockFullscreen = $doc.getObject('TotemCode.TotemClass').getProperty('fullscreen').value )
  #set( $blockContentSize = $doc.getObject('TotemCode.TotemClass').getProperty('contentSize').value )
  #set( $totemBlockContentStyle = '' )
  #if( ${isBlockFullscreen} == 1 &amp;&amp; "${blockContentSize}" != "")
    #set( $totemBlockContentStyle = "max-width: ${blockContentSize}px; margin: 0 auto;" )
  #end
    (%class="totemBlockContent" style="${totemBlockContentStyle}"%)(((
      ## display the block. get its values and then call the displayer macro
      #set($totemBlockSheet = $totemBlock.getProperty('type').value)
      ## get additionalData
      #set($totemItemAdditionalDataObjects = $xwiki.getDocument("${totemBlockSheet}").getObjects('TotemCode.TotemItemAdditionalDataClass'))
      ## this macro set $displayerAdditionalDataMap
      #getDisplayerAdditionalDataInMap($totemItemAdditionalDataObjects ${totemBlock.getProperty('data').value})
      ## Case of item coming from application
      #if("${totemBlock.getProperty('appsource_app').value}" != "" &amp;&amp; "${totemBlock.getProperty('appsource_app').value.size()}" != "0")
        ## create field mapping with data filled by the user
        #set($sourceClassFieldsMapping = {})
        #set($discard = $sourceClassFieldsMapping.put("description", "$!{totemBlock.getProperty('appsource_description').value}"))
        #set($discard = $sourceClassFieldsMapping.put("date", "$!{totemBlock.getProperty('appsource_date').value}"))
        #set($discard = $sourceClassFieldsMapping.put("image", "$!{totemBlock.getProperty('appsource_image').value}"))
        #set($discard = $sourceClassFieldsMapping.put("url", "$!{totemBlock.getProperty('appsource_url').value}"))
        #set($discard = $sourceClassFieldsMapping.put("boolean", "$!{totemBlock.getProperty('appsource_boolean').value}"))
        ## We use item from application, sourceType = 'sourceClass'
        #displayBlock($totemBlockSheet, '', $totemBlock.getProperty('title').value, $totemBlock.getProperty('footer').value, 'sourceClass', '', $!{totemBlock.getProperty('appsource_app').value.get(0)}, $!{totemBlock.getProperty('appsource_limit').value}, $!{totemBlock.get('appsource_sort')}, $!{totemBlock.get('appsource_sortDirection')}, $sourceClassFieldsMapping, $!{displayerAdditionalDataMap})
      #else
        ## We use the items list using sourceType as doclist
        #displayBlock($totemBlockSheet, '', $totemBlock.getProperty('title').value, $totemBlock.getProperty('footer').value, 'doclist', $totemBlock.getProperty('source').value, $totemItemClass, $!{totemBlock.getProperty('appsource_limit').value}, $!{totemBlock.get('appsource_sort')}, $!{totemBlock.get('appsource_sortDirection')}, $sheetFieldsMapping.get($totemBlockSheet), $!{displayerAdditionalDataMap})
      #end 
      #if($withEdit)
        ## load the css used by the color picker input in edit mode
        #set($discard = $xwiki.linkx.use($services.webjars.url('colpick/2.0.2/css/colpick.css'), {'rel': 'stylesheet'}))
        (%class="#if("$!request.editblock" != "$totemBlock.number")hidden#end editblockform"%)(((
          #displayTotemBlockEditForm($totemBlock, false, $cancelURL, $editURL, $totemItemClass)
        )))
      #end
      #if($withEdit)
        (%class="editactions"%)((({{html clean="false"}}
        &lt;input type="hidden" value="$doc.getDocumentReference()" id="totemDocRef"/&gt;
        &lt;a href="$escapetool.xml($doc.getURL('view', "showEdit=true&amp;editblock=${totemBlock.number}"))" class="editbutton btn btn-primary" rel="${totemBlock.number}"&gt;$services.localization.render('totem.edit.editblock.button')&lt;/a&gt;
        &lt;a href="$escapetool.xml($doc.getURL('view', "showEdit=true&amp;editblocksource=${totemBlock.number}"))" class="editsourcebutton btn btn-primary" rel="${totemBlock.number}"&gt;$services.localization.render('totem.edit.editblocksource.button')&lt;/a&gt;
        #displayTotemBlockRemoveForm($totemBlock, $cancelURL, $editURL){{/html}})))
      #end
    )))
#end

#macro(getDisplayerAdditionalDataInMap $totemItemAdditionalDataObjects $totemBlockStoredData)
  ## Read stored data
  #set($totemBlockStoredDataMap = {})
  #foreach($dataLine in $!{totemBlockStoredData.replaceAll("\r", "").replaceAll("\n", "").replaceAll(" ", "").split(",")})
    #set($dkey = "" )
    #set($dvalue = "" )
    #foreach( $d in ${dataLine.split(":")})
      #if(${foreach.index} == 0 )
        #set($dkey = "$!{d.trim()}" )
      #else
        #set($dvalue = "$!{d.trim()}" )
      #end
    #end
    #set($discard = $totemBlockStoredDataMap.put("${dkey}","${dvalue}") )
  #end
  ## Set additional data from displayer keys
  #set($displayerAdditionalDataMap = {})
  #foreach($additionalData in $!{totemItemAdditionalDataObjects})
    #set($key = "${additionalData.getProperty('key').value}")
    #if("$!{totemBlockStoredDataMap.get(${key})}" != "")
      #set($discard = $displayerAdditionalDataMap.put("${key}","$!{totemBlockStoredDataMap.get(${key})}"))
    #else
      ## if no stored value, use defaultValue
      #set($discard = $displayerAdditionalDataMap.put("${key}","${additionalData.getProperty('defaultValue').value}"))
    #end
  #end
#end

#macro(displayTotemBlockEditForm $totemBlock $isNewBlock $cancelURL $editURL, $totemItemClass)
  #if(!$formAction)
     #set($formAction = "$doc.getURL('save')")
  #end
  #if ($isNewBlock)
    #set($formAction = "$doc.getURL('objectadd','showEdit=true')")
  #end
  {{html clean="false" wiki="true"}}  

  {{info}}$services.localization.render('totem.edit.editblock.help'){{/info}}

  {{/html}}

  {{html clean="false"}}
   &lt;form action="$formAction" method="post" class="xform"&gt;
    &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
    &lt;input type="hidden" name="xredirect" value="$escapetool.xml($editURL)" /&gt;
    #if ($isNewBlock)
      &lt;input type="hidden" name="classname" value="TotemCode.TotemBlockClass" /&gt;
    #end
  {{/html}}
  ## display the totem editable properties
  #set($totemBlockClass = $totemBlock.xWikiClass)
  #foreach ($propName in ['type', 'title', 'size']) ## - footer, data
    ; $doc.displayPrettyName($propName, $totemBlock)
    : #if($isNewBlock){{html clean="false"}}$doc.displayEdit($totemBlockClass.get($propName), 'TotemCode.TotemBlockClass_', $totemBlock){{/html}}
      #else$doc.display($propName, 'edit', $totemBlock)
      #end
     #set($discard = $xwiki.jsx.use('TotemCode.TotemSheet'))
  #end
    ## Background-color Custom input in order to display the color picker. Note : add color-picker class with javascript
    ; $doc.displayPrettyName('background-color', $totemBlock)
    {{html clean=false}}
    #if ($isNewBlock)
      &lt;input id="TotemCode.TotemBlockClass_background-color" type="text" name="TotemCode.TotemBlockClass_background-color" class="color-picker" value="$!{escapetool.xml($!doc.getValue('background-color', ${totemBlock}))}"&gt;
    #else
      &lt;input id="TotemCode.TotemBlockClass_${totemBlock.number}_background-color" type="text" name="TotemCode.TotemBlockClass_${totemBlock.number}_background-color" class="color-picker" value="$!{escapetool.xml($!doc.getValue('background-color', ${totemBlock}))}"&gt;
    #end
    {{/html}}
    ## Text-color Custom input in order to display the color picker. Note : add color-picker class with javascript
    ; $doc.displayPrettyName('text-color', $totemBlock)
    {{html clean=false}}
    #if ($isNewBlock)
      &lt;input id="TotemCode.TotemBlockClass_text-color" type="text" name="TotemCode.TotemBlockClass_text-color" class="color-picker" value="$!{escapetool.xml($!doc.getValue('text-color', ${totemBlock}))}"&gt;
    #else
      &lt;input id="TotemCode.TotemBlockClass_${totemBlock.number}_text-color" type="text" name="TotemCode.TotemBlockClass_${totemBlock.number}_text-color" class="color-picker" value="$!{escapetool.xml($!doc.getValue('text-color', ${totemBlock}))}"&gt;
    #end
    {{/html}}
    ## Background-image Custom input to use an attachment selector
    ; $doc.displayPrettyName('background-image', $totemBlock)
    {{attachmentSelector classname="${totemBlockClass.name}" object="${totemBlock.number}" property="background-image" savemode="direct" displayImage="true" link="true" filter="png,jpg,gif" width="100px"/}}
    ## Background-video Custom input to use an attachment selector
    ## TODO : Develop this functionality
    ## ; $doc.displayPrettyName('background-video', $totemBlock)
    ## {{attachmentSelector classname="${totemBlockClass.name}" object="${totemBlock.number}" property="background-video" savemode="direct" displayImage="false" link="true" filter="mp4, avi, mpg"/}}
    ## Add additional specific data from the displayer
    #set($totemBlockSheet = $totemBlock.getProperty('type').value)  
    #set($totemItemAdditionalDataObjects = $xwiki.getDocument("$totemBlockSheet").getObjects('TotemCode.TotemItemAdditionalDataClass') )
    #getDisplayerAdditionalDataInMap($totemItemAdditionalDataObjects ${totemBlock.getProperty('data').value})
    (%class="additionalData" id %)(((
    #foreach($additionalDataKey in $!{displayerAdditionalDataMap.keySet()})
      ; $services.localization.render("totem.edit.$additionalDataKey")
      {{html wiki="true" clean=false}}
        &lt;input id="${additionalDataKey}_${totemBlock.number}" type="text" name="${additionalDataKey}" value="$!{displayerAdditionalDataMap.get(${additionalDataKey})}" class="displayerAdditionalData"&gt;
      {{/html}}
    #end
    {{html clean=false}}
    &lt;input type="hidden" id="TotemCode.TotemBlockClass_${totemBlock.number}_data" name="TotemCode.TotemBlockClass_${totemBlock.number}_data" value="$escapetool.xml($!doc.getValue('data', ${totemBlock}))"/&gt;
    {{/html}}
    )))
  {{html clean="false"}}
    &lt;div class="buttonwrapper"&gt;
      &lt;input type="submit" value="$services.localization.render('save')" class="button saveBlockBtn" /&gt;
      &lt;a href="$cancelURL" class="cancelbutton"&gt;$services.localization.render('cancel')&lt;/a&gt;
    &lt;/div&gt;
    &lt;/form&gt;
  {{/html}}
#end

#macro(displayTotemBlockEditSourceForm $totemBlock $totemItemsURL $cancelURL $editURL)
    #if(!$formAction)
     #set($formAction = "$doc.getURL('save')")
    #end
    {{html clean="false" wiki="true"}}
      &lt;form action="$formAction" method="post" class="xform"&gt;

      {{info}}$services.localization.render('totem.edit.editblocksource.help'){{/info}}

      &lt;ul class="nav nav-tabs" role="tablist"&gt;
         &lt;li class="active"&gt;&lt;a href="#simple" role="tab" data-toggle="tab"&gt;Simple&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href="#advanced" role="tab" data-toggle="tab"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
      &lt;div class="tab-content"&gt;
         &lt;div class="tab-pane active" id="simple"&gt;
             &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
             #if ("$!request.totemDocRef" != "" &amp;&amp; $xwiki.exists($request.totemDocRef))
                #set($totemEditURL = $xwiki.getURL($request.totemDocRef,'view','showEdit=true'))
             #end
             &lt;input type="hidden" name="xredirect" value="$!escapetool.xml($totemEditURL)" /&gt;
             ## display the totem source properties
             #set($totemBlockClass = $totemBlock.xWikiClass)
             &lt;br/&gt;
             #foreach ($propName in ['source'])
                ; $doc.displayPrettyName($propName, $totemBlock)
                : $doc.display($propName, 'edit', $totemBlock)
             #end
         &lt;/div&gt;
         &lt;div class="tab-pane" id="advanced"&gt;
            &lt;br/&gt;
            {{warning}}**For advanced user only :**{{/warning}}

            #foreach ($propName in ['appsource_app', 'appsource_date', 'appsource_description', 'appsource_image', 'appsource_url', 'appsource_boolean', 'appsource_limit', 'appsource_sort', 'appsource_sortDirection'])
               ; $doc.displayPrettyName($propName, $totemBlock)
               : $doc.display($propName, 'edit', $totemBlock)
            #end
         &lt;/div&gt;
      &lt;/div&gt;
       &lt;div class="buttonwrapper"&gt;
        &lt;input type="submit" value="$services.localization.render('save')" class="button saveSourceBtn" /&gt;
        &lt;a href="$cancelURL" class="cancelbutton"&gt;$services.localization.render('cancel')&lt;/a&gt;
      &lt;/div&gt;
      &lt;/form&gt;
    {{/html}}
  #*(((
  (%class="buttonwrapper"%)[[$services.localization.render('totem.edit.editblocksource.itemslink')&gt;&gt;path:$totemItemsURL||class="button adminItemsBtn" rel="__blank"]](%%)
  )))*#
#end

#macro(displayTotemBlockRemoveForm $totemBlock $cancelURL $editURL)
  &lt;form action="$doc.getURL('objectremove')" method="post" class="removeblockform"&gt;
    &lt;span&gt;
      &lt;input type="hidden" name="classname" value="TotemCode.TotemBlockClass" /&gt;
      &lt;input type="hidden" name="classid" value="$totemBlock.number" /&gt;
      &lt;input type="hidden" name="cancelURL" value="$escapetool.xml($cancelURL)" /&gt;
      &lt;input type="hidden" name="xredirect" value="$escapetool.xml($editURL)" /&gt;
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
   &lt;/span&gt;
  &lt;input type="submit" value="$services.localization.render('totem.edit.removeitem.button')" class="deletebutton btn btn-danger" /&gt;
  &lt;/form&gt;
#end

#macro(displayEditTotemConfigurationForm)
  {{html clean="false" wiki="true"}}
    &lt;form action="$doc.getURL('save')" method="post"&gt;
    &lt;fieldset&gt;
      &lt;input type="hidden" name="xredirect" value="$escapetool.xml($editURL)" /&gt;
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
    &lt;/fieldset&gt;
    #set($totemObject = $doc.getObject('TotemCode.TotemClass'))
    $services.localization.render('totem.edit.configuration.fullscreen') $totemObject.display('fullscreen','edit')&lt;br&gt;
    $services.localization.render('totem.edit.configuration.size.label') $totemObject.display('contentSize','edit') $services.localization.render('totem.edit.configuration.size.hint')
    &lt;div class="buttonwrapper"&gt;
      &lt;input type="submit" value="$services.localization.render('totem.edit.configuration.save')" class="button" /&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
#end

#macro(displayEditOrderForm $editURL)
  {{html clean="false" wiki="true"}}
    &lt;form action="$doc.getURL('save')" method="post" class="editorderform"&gt;
    &lt;fieldset&gt;
      &lt;input type="hidden" name="xredirect" value="$escapetool.xml($editURL)" /&gt;
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
    &lt;/fieldset&gt;
    $doc.displayEdit($totemObject.xWikiClass.get('blockOrder'), "TotemCode.TotemClass_${totemObject.number}_", $totemObject)
    &lt;div class="buttonwrapper"&gt;
      &lt;input type="submit" value="$services.localization.render('totem.edit.order.save')" class="button" /&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
#end

#**
* Display the totem actions links : Edit totem, documentation ...
*#
#macro(displayTotemActionsLinks)
#set($totemViewURL = $doc.getURL())
#set($totemEditURL = $doc.getURL('view','showEdit=true'))
#set($totemDocURL = $xwiki.getURL('TotemCode.Documentation','view'))
#set($totemsListURL = $xwiki.getURL("${services.wiki.currentWikiId}:Totem.WebHome"))
{{html clean="false"}}
&lt;div class="clearfix"&gt;
&lt;div class="pull-right"&gt;
 &lt;a class="btn btn-info" href="$totemDocURL" target="_blank"&gt;
    $services.icon.renderHTML('book') $services.localization.render('totem.edit.documentation')
 &lt;/a&gt;
 #if ($hasEdit &amp;&amp; "$!request.showEdit" != 'true')
    &lt;a class="btn btn-info" href="$totemEditURL"&gt;
       $services.icon.renderHTML('pencil') $services.localization.render('totem.edit.edittotem')
    &lt;/a&gt; 
 #end
 #if ("$!request.showEdit" == 'true')
    &lt;a class="btn btn-info" href="$totemViewURL"&gt;$services.icon.renderHTML('eye') $services.localization.render('totem.edit.viewtotem')&lt;/a&gt; 
 #end
&lt;/div&gt;
&lt;div class="pull-left"&gt;
  &lt;a class="btn btn-info" href="$totemsListURL" class="addsection"&gt;
     $services.icon.renderHTML('list') $services.localization.render('totem.edit.exitedit')
  &lt;/a&gt;
  #if ("$!request.showEdit" == 'true')
     &lt;a class="btn btn-info addsection" href="javascript:;"&gt;
        $services.icon.renderHTML('add') $services.localization.render('totem.edit.additem.button')
     &lt;/a&gt;
  #end  
&lt;/div&gt;
&lt;/div&gt;
{{/html}}
#end
{{/velocity}}</content>
</xwikidoc>
